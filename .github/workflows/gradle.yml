# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# github repository Actions 페이지에 나타낼 이름
name: Dotoriham CI/CD

# event trigger
on:
  push:
    branches:
      - main
      - develop
      - feature/#125-CICD

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin' # https://github.com/actions/setup-java

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew build -x test -x ktlintCheck -x ktlintTestSourceSetCheck -x ktlintMainSourceSetCheck

    ## docker build & push - prod
    - name: Docker build & push - prod
      uses: actions/checkout@v3
      if: contains(github.ref, 'main')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile-prod -t juhyun419/tests2 .
          docker push ${{ secrets.DOCKER_REPO }}/tests2

    ## docker build & push - dev
    - name: Docker build & push - dev
      uses: actions/checkout@v3
      if: contains(github.ref, 'feature/#125-CICD')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Web-Team-2-Backend/Dockerfile-dev -t juhyun419/tests2 .
          docker push ${{ secrets.DOCKER_REPO }}/tests2

    ## deploy-to-prod
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      if: contains(github.ref, 'main')
      with:
          host: ec2-3-36-38-219.ap-northeast-2.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
              sudo docker rm -f $(docker ps -qa)
              sudo docker pull ${{ secrets.DOCKER_REPO }}/tests2
              docker-compose up -d
              docker image prune -f

    ## deploy-to-dev
    - name: Deploy to dev
      uses: appleboy/ssh-action@master
      if: contains(github.ref, 'feature/#125-CICD')
      with:
        host: ec2-52-79-62-36.ap-northeast-2.compute.amazonaws.com
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/tests2
            docker-compose up -d
            docker image prune -f
